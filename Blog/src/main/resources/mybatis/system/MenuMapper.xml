<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dimple.project.system.mapper.MenuMapper">

    <resultMap type="com.dimple.project.system.domain.Menu" id="SysMenuResult">
        <id property="id" column="id"/>
        <result property="menuName" column="menu_name"/>
        <result property="parentName" column="parent_name"/>
        <result property="parentId" column="parent_id"/>
        <result property="orderNum" column="order_num"/>
        <result property="path" column="path"/>
        <result property="component" column="component"/>
        <result property="isFrame" column="is_frame"/>
        <result property="menuType" column="menu_type"/>
        <result property="visible" column="visible"/>
        <result property="perms" column="perms"/>
        <result property="icon" column="icon"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectMenuVo">
        select id, menu_name, parent_id, order_num, path, component, is_frame, menu_type, visible, ifnull(perms,'') as perms, icon, create_time
		from menu
    </sql>

    <select id="selectMenuList" parameterType="com.dimple.project.system.domain.Menu" resultMap="SysMenuResult">
        <include refid="selectMenuVo"/>
        where delete_time is null
        <if test="menuName != null and menuName != ''">
            AND menu_name like concat('%', #{menuName}, '%')
        </if>
        <if test="visible != null and visible != ''">
            AND visible = #{visible}
        </if>
        order by parent_id, order_num
    </select>

    <select id="selectMenuTreeAll" resultMap="SysMenuResult">
		select distinct m.id, m.parent_id, m.menu_name, m.path, m.component, m.visible, ifnull(m.perms,'') as perms, m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time
		from menu m where m.menu_type in ('M', 'C') and m.visible = 0 and m.delete_time is null
		order by m.parent_id, m.order_num
	</select>

    <select id="selectMenuTreeByUserId" parameterType="Long" resultMap="SysMenuResult">
		select distinct m.id, m.parent_id, m.menu_name, m.path, m.component, m.visible, ifnull(m.perms,'') as perms, m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time
		from menu m
			 left join role_menu rm on m.id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join role ro on ur.role_id = ro.id
			 left join user u on ur.user_id = u.id
		where u.id = #{userId} and m.menu_type in ('M', 'C') and m.visible = 0  AND ro.status = 0 and m.delete_time is null
		order by m.parent_id, m.order_num
	</select>

    <select id="selectMenuListByRoleId" parameterType="Long" resultType="Integer">
		select m.id, m.parent_id
		from menu m
            left join role_menu rm on m.id = rm.menu_id
        where rm.role_id = #{roleId}
        	and m.id not in (select m.parent_id from menu m inner join role_menu rm on m.id = rm.menu_id and rm.role_id = #{roleId})
        	and m.delete_time is null
		order by m.parent_id, m.order_num
	</select>

    <select id="selectMenuPerms" resultType="String">
		select distinct m.perms
		from menu m
			 left join role_menu rm on m.id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
		where
		    m.delete_time is null
	</select>

    <select id="selectMenuPermsByUserId" parameterType="Long" resultType="String">
		select distinct m.perms
		from menu m
			 left join role_menu rm on m.id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
		where ur.user_id = #{userId} and m.delete_time is null
	</select>

    <select id="selectMenuById" parameterType="Long" resultMap="SysMenuResult">
        <include refid="selectMenuVo"/>
        where id = #{id} and delete_time is null
    </select>

    <select id="hasChildByMenuId" resultType="Integer">
	    select count(1) from menu where parent_id = #{id}  and delete_time is null
	</select>

    <select id="checkMenuNameUnique" parameterType="com.dimple.project.system.domain.Menu" resultMap="SysMenuResult">
        <include refid="selectMenuVo"/>
        where menu_name=#{menuName} and parent_id = #{parentId} and delete_time is null
    </select>

    <update id="updateMenu" parameterType="com.dimple.project.system.domain.Menu">
        update menu
        <set>
            <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
            <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="path != null and path != ''">path = #{path},</if>
            <if test="component != null and component != ''">component = #{component},</if>
            <if test="isFrame != null and isFrame != ''">is_frame = #{isFrame},</if>
            <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
            <if test="visible != null">visible = #{visible},</if>
            <if test="perms !=null">perms = #{perms},</if>
            <if test="icon !=null and icon != ''">icon = #{icon},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where id = #{id}
    </update>

    <insert id="insertMenu" parameterType="com.dimple.project.system.domain.Menu">
        insert into menu(
        <if test="id != null and id != 0">id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="menuName != null and menuName != ''">menu_name,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="path != null and path != ''">path,</if>
        <if test="component != null and component != ''">component,</if>
        <if test="isFrame != null and isFrame != ''">is_frame,</if>
        <if test="menuType != null and menuType != ''">menu_type,</if>
        <if test="visible != null">visible,</if>
        <if test="perms !=null and perms != ''">perms,</if>
        <if test="icon != null and icon != ''">icon,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="id != null and id != 0">#{id},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="menuName != null and menuName != ''">#{menuName},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="path != null and path != ''">#{path},</if>
        <if test="component != null and component != ''">#{component},</if>
        <if test="isFrame != null and isFrame != ''">#{isFrame},</if>
        <if test="menuType != null and menuType != ''">#{menuType},</if>
        <if test="visible != null">#{visible},</if>
        <if test="perms !=null and perms != ''">#{perms},</if>
        <if test="icon != null and icon != ''">#{icon},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <delete id="deleteMenuById">
	    delete from menu where id = #{menuId}
	</delete>

</mapper>
